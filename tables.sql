DROP TABLE HOTELS;
TRUNCATE TABLE HOTELS;
DROP TABLE AVG_RATINGS;
TRUNCATE TABLE AVG_RATINGS;
DROP TABLE REVIEW;
TRUNCATE TABLE REVIEW;
DROP DIRECTORY processed_data_dir;

CREATE OR REPLACE DIRECTORY processed_data_dir AS 'C:\Users\13178\Documents\GitHub\Sentiment_Analyzer';

SELECT directory_name, directory_path FROM ALL_DIRECTORIES WHERE directory_name like 'PROCESSED_DATA_DIR';
SELECT directory_path || '/' || 'HOTELS.csv' FROM ALL_DIRECTORIES WHERE directory_name = 'PROCESSED_DATA_DIR';

-- Create the HOTELS table (representing a single hotel)
CREATE TABLE HOTELS (
    HOTELID NUMBER(38, 0) PRIMARY KEY,    
    NAME    VARCHAR2(100) NOT NULL,  
    CITY    VARCHAR2(100),
    COUNTRY VARCHAR2(100)
);

SELECT * FROM(SELECT * FROM  HOTELS ORDER BY DBMS_RANDOM.RANDOM) WHERE  rownum < 6;
SELECT * FROM(SELECT * FROM  HOTELS ORDER BY DBMS_RANDOM.RANDOM) WHERE  HOTELID = 1385;
SELECT COUNT(*) FROM HOTELS;
SELECT COUNT(*) FROM user_tables WHERE table_name = 'HOTELS';


CREATE TABLE REVIEW (
    REVIEWID INT PRIMARY KEY,
    HOTELID INT,
    BREAKFASTSCORE INT,
    CLEANSCORE INT,
    PRICESCORE INT,
    SERVICESCORE INT,
    LOCALSCORE INT,
    FOREIGN KEY (HOTELID) REFERENCES HOTELS(HOTELID)
);

SELECT * FROM(SELECT * FROM  REVIEW ORDER BY DBMS_RANDOM.RANDOM) WHERE  rownum < 6;
SELECT * FROM(SELECT * FROM  REVIEW ORDER BY DBMS_RANDOM.RANDOM) WHERE  HOTELID = 1385;
SELECT COUNT(*) FROM REVIEW;
SELECT COUNT(*) FROM user_tables WHERE table_name = 'REVIEW';


CREATE TABLE AVG_RATINGS (
    HOTELID NUMBER(38,0),
    AVERAGE_BREAKFASTSCORE NUMBER(38,0),
    AVERAGE_CLEANSCORE NUMBER(38,0),
    AVERAGE_PRICESCORE NUMBER(38,0),
    AVERAGE_SERVICESCORE NUMBER(38,0),
    AVERAGE_LOCALSCORE NUMBER(38,0),
    FOREIGN KEY (HOTELID) REFERENCES HOTELS(HOTELID)
);

INSERT INTO AVG_RATINGS (HOTELID, AVERAGE_BREAKFASTSCORE, AVERAGE_CLEANSCORE, AVERAGE_PRICESCORE, AVERAGE_SERVICESCORE, AVERAGE_LOCALSCORE)
SELECT 
    HOTELID,
    ROUND(AVG(BREAKFASTSCORE), 0) AS AVERAGE_BREAKFASTSCORE,
    ROUND(AVG(CLEANSCORE), 0) AS AVERAGE_CLEANSCORE,
    ROUND(AVG(PRICESCORE), 0) AS AVERAGE_PRICESCORE,
    ROUND(AVG(SERVICESCORE), 0) AS AVERAGE_SERVICESCORE,
    ROUND(AVG(LOCALSCORE), 0) AS AVERAGE_LOCALSCORE
FROM REVIEW GROUP BY HOTELID ORDER BY HOTELID;

SELECT * FROM(SELECT * FROM  AVG_RATINGS ORDER BY DBMS_RANDOM.RANDOM) WHERE  rownum < 6;
SELECT * FROM(SELECT * FROM  AVG_RATINGS ORDER BY DBMS_RANDOM.RANDOM) WHERE  HOTELID = 1385;
SELECT COUNT(*) FROM AVG_RATINGS;
SELECT COUNT(*) FROM user_tables WHERE table_name = 'AVG_RATINGS';